{"version":3,"sources":["scss\\main.scss","scss\\_header.scss","scss\\_feature.scss","scss\\_section.scss","scss\\_grid.scss","scss\\mixins\\_grid-mixins.scss","scss\\variables\\_grid-variables.scss","scss\\_visibility.scss","scss\\_mobilenav.scss"],"names":[],"mappings":"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","file":"js.6f9d8324.css","sourceRoot":"..\\src","sourcesContent":["//colors\r\n$color1: hsl(84, 2%, 91%);\r\n$color2: hsl(10, 46%, 32%);\r\n$color3: hsl(150, 8%, 95%);\r\n$color4: hsl(20, 21%, 47%);\r\n$color5: hsl(48, 19%, 31%);\r\n$color6: hsl(245, 21%, 12%);\r\n//fonts\r\n$font-large: 1rem;\r\n$font-med: 0.9rem;\r\n$font-sm: 0.8rem;\r\n@import './header';\r\n@import './feature';\r\n@import './section';\r\n@import './variables/main.scss';\r\n@import './mixins/main.scss';\r\n@import './grid';\r\n@import './visibility';\r\n@import './mobilenav'; // Visibility last for precedence\r\n//using material-UI\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');\r\n* {\r\n  box-sizing: border-box;\r\n  //position: relative;\r\n  //outline: 1px solid red;\r\n}\r\n\r\nhtml {\r\n  scroll-behavior: smooth;\r\n  -webkit-overflow-scrolling: auto;\r\n  &::-webkit-scrollbar {\r\n    display: block;\r\n    height: 2px;\r\n    width: 10px;\r\n    color: $color1;\r\n    background-color: $color1;\r\n    @include breakpoint-down(small) {\r\n      display: none;\r\n    }\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    width: 2rem;\r\n    max-height: 1rem;\r\n    background: $color5;\r\n    border-radius: 2px;\r\n  }\r\n}\r\n\r\nbody {\r\n  background-color: $color6;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  display: grid;\r\n  font-family: 'Poppins', sans-serif;\r\n}\r\n\r\np {\r\n  color: $color1;\r\n  display: flex;\r\n  margin: 0px;\r\n  justify-content: center;\r\n}\r\n\r\ni {\r\n  color: $color2;\r\n  text-align: center;\r\n  height: 100%;\r\n}\r\n\r\nspan {\r\n  background: $color1 !important;\r\n  color: $color2;\r\n}\r\n\r\n//flexbox\r\n.flex {\r\n  display: flex;\r\n  &-jc-sb {\r\n    justify-content: space-between;\r\n  }\r\n  &-jc-c {\r\n    justify-content: center;\r\n  }\r\n  &-ai-c {\r\n    align-items: center;\r\n  }\r\n}\r\n\r\nbutton,\r\n.button {\r\n  cursor: pointer;\r\n}\r\n\r\n//visibility\r\n.hide-for-mobile {\r\n  @include breakpoint-down(medium) {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.hide-for-desktop {\r\n  @include breakpoint-up(medium) {\r\n    display: none;\r\n  }\r\n}\r\n\r\n//text\r\n.banner {\r\n  font-family: 'Shadows Into Light', cursive;\r\n  text-align: bottom;\r\n  padding-top: 0em;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 40rem;\r\n  @include breakpoint-down(medium) {\r\n    padding-top: -20px;\r\n    width: 80%;\r\n    margin: auto;\r\n  }\r\n  @include breakpoint-down(small) {\r\n    padding-top: 20px;\r\n    width: 80%;\r\n    margin: 0;\r\n  }\r\n  @include breakpoint-up(medium) {\r\n    text-align: top;\r\n    margin-top: 100px;\r\n  }\r\n}\r\n\r\ncode {\r\n  font-family: 'Square721 BT';\r\n  font-size: 13px;\r\n  color: black;\r\n}\r\n",".header {\r\n  color: black;\r\n  margin: 0;\r\n  padding: 0;\r\n  padding: 0px;\r\n  background-color: $color3;\r\n  nav {\r\n    color: black;\r\n    top: 0;\r\n    width: 100%;\r\n    max-width: 1080px;\r\n    margin: auto;\r\n  }\r\n  &__logo {\r\n    //logo\r\n    margin-left: 0.54em;\r\n    margin-top: 0.24em;\r\n  }\r\n  &__menu {\r\n    //mobile MENU\r\n    span {\r\n      display: block;\r\n      width: 26px;\r\n      height: 2px;\r\n      background-color: $color1;\r\n    }\r\n  }\r\n  &__links {\r\n    padding-top: 1.42em;\r\n    padding-right: 0em;\r\n    color: $color2;\r\n    margin-right: 2em;\r\n    a {\r\n      position: relative;\r\n      text-decoration: none;\r\n      font-size: $font-med + 0.2rem;\r\n      color: $color2;\r\n      &:not(:last-child) {\r\n        margin-right: 30px;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        display: block;\r\n        position: absolute;\r\n        height: 0.15em;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: -5px;\r\n        color: $color2;\r\n      }\r\n      &:hover {\r\n        color: rgb(0, 0, 0);\r\n      }\r\n    }\r\n    a {\r\n      position: relative;\r\n      font-size: $font-med + 0.2rem;\r\n      color: $color2;\r\n      &:not(:last-child) {\r\n        margin-right: 30px;\r\n      }\r\n      &::before {\r\n        content: '';\r\n        display: block;\r\n        position: absolute;\r\n        height: 3px;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: -10px;\r\n        color: $color2;\r\n      }\r\n      &:hover {\r\n        color: rgb(0, 0, 0);\r\n        &::before {\r\n          background: $color2;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &__cta {\r\n    font-size: $font-med;\r\n    color: $color2;\r\n  }\r\n}\r\n\r\n.circleBehind a:before,\r\n.circleBehind a:after {\r\n  position: absolute;\r\n  top: 22px;\r\n  left: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 4px solid #0277bd;\r\n  transform: translateX(-50%) translateY(-50%) scale(0.8);\r\n  border-radius: 50%;\r\n  background: transparent;\r\n  content: '';\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  z-index: -1;\r\n}\r\n","@media (min-width: 64em) {\r\n  ///styles go here\r\n}\r\n\r\n//640px, 1024px, 1400px\r\n$breakpoints-up: (\r\n  'medium': '45em',\r\n  'large': '64em',\r\n);\r\n//639px, 1024px, 1399px\r\n$breakpoints-down: (\r\n  'verysmall': '24rem',\r\n  'small': '40em',\r\n  'medium': '45em',\r\n  'large': '64em',\r\n);\r\n@mixin breakpoint-up($size) {\r\n  @media (min-width: map-get($breakpoints-up, $size)) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin breakpoint-down($size) {\r\n  @media (max-width: map-get($breakpoints-down, $size)) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin bgConfig {\r\n  background-size: cover;\r\n  background-position: center center;\r\n}\r\n\r\n.scrolling-wrapper {\r\n  overflow-x: scroll;\r\n  max-width: 1080px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n  grid-gap: 16px;\r\n  justify-content: center;\r\n  @include breakpoint-up(large) {\r\n    display: grid;\r\n  }\r\n  @include breakpoint-up(medium) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    max-width: 750px;\r\n    align-items: right;\r\n  }\r\n  @include breakpoint-down(medium) {\r\n    display: grid;\r\n    grid-template-columns: 1.5fr 1.5fr;\r\n    width: 500px;\r\n    margin: auto;\r\n  }\r\n  @include breakpoint-down(small) {\r\n    width: 100vw;\r\n    display: block;\r\n    padding: 2rem;\r\n    margin-left: -5px;\r\n    margin-right: 0;\r\n    padding-left: 10px;\r\n    padding-right: 0px;\r\n    padding-top: 0px;\r\n    padding-bottom: 0px;\r\n  }\r\n  -webkit-overflow-scrolling: touch;\r\n  &::-webkit-scrollbar {\r\n    display: block;\r\n    height: 9px;\r\n    border-radius: 50px;\r\n    @include breakpoint-down(small) {\r\n      display: none;\r\n    }\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    width: 5px;\r\n    border-radius: 50px;\r\n    background: $color2;\r\n    border-radius: 50px;\r\n  }\r\n  .card {\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    transition: all 100ms ease-in-out;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n    max-height: 18.5rem;\r\n    min-height: 18.5rem;\r\n    max-width: 12.5rem;\r\n    min-width: 12.5rem;\r\n    margin: 0.2rem;\r\n    padding: 0;\r\n    &:hover .card__visual {\r\n      background: url('../assests/home1.jpeg') no-repeat;\r\n      @include bgConfig;\r\n      transform: scale(0.9);\r\n      box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\r\n      height: 14rem;\r\n    }\r\n    &__visual {\r\n      background: url('../assests/home2.jpeg') no-repeat;\r\n      height: 17rem;\r\n      width: 100%;\r\n      @include bgConfig;\r\n      position: relative;\r\n      transition: all 0.7s ease;\r\n    }\r\n    &__texts {\r\n      padding-top: -1rem;\r\n      cursor: default;\r\n      padding: 0.1rem;\r\n      width: 100%;\r\n      .title {\r\n        margin: -0.1rem;\r\n        padding-left: 1rem;\r\n        font-size: 1rem;\r\n        color: #57606f;\r\n      }\r\n      .subtitle {\r\n        margin: -1.2rem;\r\n        padding: 0;\r\n        text-align: right;\r\n        padding-left: 7.1rem;\r\n        font-size: 0.71rem;\r\n        color: #747d8c;\r\n      }\r\n      .read {\r\n        display: grid;\r\n        margin: 1.8rem;\r\n        text-align: right;\r\n        padding: 0.8rem;\r\n        padding-left: 6rem;\r\n        font-size: 0.71rem;\r\n        color: #747d8c;\r\n      }\r\n    }\r\n    a {\r\n      color: black;\r\n      font-size: 0.7rem;\r\n      padding-left: 7rem;\r\n      margin: 1.2rem;\r\n      cursor: pointer;\r\n      &::before {\r\n        content: '';\r\n        display: block;\r\n        position: absolute;\r\n        height: 0em;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0px;\r\n        color: $color2;\r\n      }\r\n      &:hover {\r\n        &::before {\r\n          background-color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",".section1 {\r\n  width: auto;\r\n  @include breakpoint-down(small) {\r\n    width: 100vw;\r\n  }\r\n  background-color: $color1;\r\n  //height: auto;\r\n  margin: 0;\r\n  padding: 0;\r\n  &__data {\r\n    color: $color1;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 850px;\r\n    width: 100%;\r\n    .head {\r\n      display: flex;\r\n      text-align: center;\r\n      justify-content: center;\r\n      flex-direction: row;\r\n      a {\r\n        text-decoration: none;\r\n        color: $color2;\r\n        font-size: 1.2rem;\r\n        padding-left: 1.5rem;\r\n        padding-right: 1.5rem;\r\n        @include breakpoint-down(small) {\r\n          padding-left: 0.5rem;\r\n          padding-right: 0.5rem;\r\n          font-size: 1rem;\r\n        }\r\n        margin: 0rem;\r\n        cursor: pointer;\r\n        &::before {\r\n          content: '';\r\n          display: block;\r\n          position: absolute;\r\n          height: 0em;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0px;\r\n          color: $color2;\r\n        }\r\n        &:hover {\r\n          &::before {\r\n            background-color: white;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .dim {\r\n      font-size: large;\r\n      max-width: 1080px;\r\n      color: black;\r\n      margin-top: 0;\r\n      padding-left: 3rem;\r\n      @include breakpoint-down(medium) {\r\n        padding-left: 3rem;\r\n      }\r\n      @include breakpoint-down(small) {\r\n        padding-left: 1rem;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.section2 {\r\n  width: auto;\r\n  @include breakpoint-down(small) {\r\n    width: 100vw;\r\n  }\r\n  max-height: 700px;\r\n  height: 100%;\r\n  background-color: $color5;\r\n  padding: 0px;\r\n  &__data {\r\n    color: $color1;\r\n    height: 100%;\r\n    max-width: 900px;\r\n    .dim {\r\n      color: white;\r\n      padding: 1.6em;\r\n      font-size: 1.1em;\r\n    }\r\n    margin: auto;\r\n  }\r\n  .visiting-card {\r\n    color: black;\r\n    width: 50%;\r\n    position: absolute;\r\n    &::before {\r\n      content: '';\r\n      display: none;\r\n    }\r\n    &:hover {\r\n      display: block;\r\n      &::before {\r\n        background-color: white;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.section3 {\r\n  max-width: 1920px;\r\n  background-color: $color1;\r\n  width: auto;\r\n  @include breakpoint-down(small) {\r\n    width: 100vw;\r\n  }\r\n  max-height: 700px;\r\n  height: 100%;\r\n  //background: linear-gradient(to right, $color5 50%, $color1 50%);\r\n  padding: 0px;\r\n  &__data {\r\n    color: $color1;\r\n    height: 100%;\r\n    max-width: 900px;\r\n    .dim {\r\n      color: white;\r\n      padding: 1.6em;\r\n      font-size: 1.1em;\r\n    }\r\n    margin: auto;\r\n  }\r\n}\r\n\r\n.contacts {\r\n  margin-top: 3rem;\r\n  padding-top: 3rem;\r\n  width: auto;\r\n  @include breakpoint-down(small) {\r\n    width: 100vw;\r\n  }\r\n  max-height: 700px;\r\n  max-width: 1080px;\r\n  height: 21.5rem;\r\n  background-color: $color3;\r\n  //background-color: linear-gradient( to right, rgb(255, 255, 255), rgb(114, 57, 20) 50%);\r\n  padding-right: 0px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  @include breakpoint-down(medium) {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    height: 25.5rem;\r\n  }\r\n  @include breakpoint-down(small) {\r\n    margin: 0;\r\n    background-color: $color2;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 0rem;\r\n    justify-content: center;\r\n  }\r\n  &__left {\r\n    margin-top: 0.01rem;\r\n    margin-left: -1.7rem;\r\n    color: $color2;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-left: 3rem;\r\n    align-items: center;\r\n    &:hover {\r\n      text-decoration: none !important;\r\n    }\r\n    .contactlogo {\r\n      background-position: center;\r\n      margin-left: -2rem;\r\n      margin-top: 1rem;\r\n      padding-top: 0.6rem;\r\n      padding-left: 1.5rem;\r\n      padding-bottom: 0rem;\r\n      margin-bottom: -2rem;\r\n    }\r\n    .dim {\r\n      margin: 0rem;\r\n      margin-top: -0.8rem;\r\n      color: rgb(255, 255, 255);\r\n      padding-top: 1rem;\r\n      padding-right: 0.2rem;\r\n    }\r\n    .callcard {\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      border-radius: 0.3rem;\r\n      background-position: center;\r\n      position: static;\r\n      padding: 1rem;\r\n      padding-left: 1rem;\r\n      padding-right: 0;\r\n      margin-left: 1.5rem;\r\n      width: 100%;\r\n      margin-top: -2rem;\r\n      background-color: $color6;\r\n      @include breakpoint-down(small) {\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        padding-left: 0rem;\r\n        padding-right: 0;\r\n        width: 20rem;\r\n        font-size: 2.5rem;\r\n        margin-bottom: 0.3rem;\r\n      }\r\n      @include breakpoint-up(medium) {\r\n        display: grid;\r\n        padding-left: 1rem;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-gap: 1rem;\r\n        display: flex;\r\n        width: 25rem;\r\n      }\r\n      @include breakpoint-down(medium) {\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        padding-left: 0rem;\r\n        padding-right: 0;\r\n        width: 20rem;\r\n        font-size: 2rem;\r\n        background-color: $color4;\r\n      }\r\n    }\r\n    .grid {\r\n      margin-top: 0.3rem;\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .call {\r\n      display: grid;\r\n      color: rgb(255, 255, 255);\r\n      font-size: 0.9em;\r\n      margin: 5px;\r\n      @include breakpoint-up(medium) {\r\n        font-size: 1.1em;\r\n      }\r\n      @include breakpoint-down(medium) {\r\n        font-size: 0.7em;\r\n      }\r\n    }\r\n    .number {\r\n      text-decoration: none !important;\r\n      color: rgb(255, 255, 255);\r\n      font-size: 0.8em;\r\n      @include breakpoint-up(medium) {\r\n        font-size: 0.9em;\r\n      }\r\n      @include breakpoint-down(medium) {\r\n        font-size: 0.9em;\r\n      }\r\n      a {\r\n        padding-left: 4rem;\r\n      }\r\n    }\r\n  }\r\n  &__right {\r\n    padding: 0;\r\n    margin-top: 1rem;\r\n    margin-left: -1rem;\r\n    align-items: center;\r\n    height: 20rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    .picture {\r\n      @include breakpoint-down(medium) {\r\n        margin: 0rem;\r\n        margin-top: 8rem;\r\n        padding-left: 1rem;\r\n        width: 17rem;\r\n      }\r\n      @include breakpoint-down(small) {\r\n        margin: 1rem;\r\n        margin-top: 1rem;\r\n        padding-left: 2rem;\r\n        width: 20rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.visiting-card {\r\n  color: black;\r\n  width: 60%;\r\n  position: absolute;\r\n  &::before {\r\n    content: '';\r\n    display: none;\r\n  }\r\n  &:hover {\r\n    display: block;\r\n    &::before {\r\n      background-color: white;\r\n    }\r\n  }\r\n}\r\n\r\n.wa {\r\n  background-color: #00bfa5;\r\n  padding: 1rem;\r\n  max-width: 1920px;\r\n  width: 100%;\r\n  &__content {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 1080px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 0.5fr;\r\n    justify-content: center;\r\n    align-content: center;\r\n    @include breakpoint-down(medium) {\r\n      margin: 1rem;\r\n      padding: 0rem;\r\n      margin-left: 0rem;\r\n      margin-right: 0rem;\r\n      height: 18rem;\r\n    }\r\n    @include breakpoint-down(small) {\r\n      margin: 2rem;\r\n      display: block;\r\n      padding: auto;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      height: 20rem;\r\n    }\r\n    .qr {\r\n      position: static;\r\n      margin: 0;\r\n      max-width: 20rem;\r\n      min-width: 20rem;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n  &__set1 {\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-top: 0rem;\r\n    @include breakpoint-up(medium) {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    @include breakpoint-down(small) {\r\n      margin-right: auto;\r\n      margin-left: auto;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    img {\r\n      margin-top: 4rem;\r\n      @include breakpoint-down(small) {\r\n        margin-top: 0rem;\r\n      }\r\n    }\r\n    .dim {\r\n      color: $color3;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin-right: auto;\r\n      padding-top: 0;\r\n      padding-left: 1rem;\r\n      margin-top: 1rem;\r\n      font-size: 3rem;\r\n      margin-bottom: 2rem;\r\n      @include breakpoint-down(small) {\r\n        margin-right: auto;\r\n        margin-left: auto;\r\n        padding-top: 0rem;\r\n        font-size: 2rem;\r\n      }\r\n      button {\r\n        width: 4rem;\r\n        height: 1.5rem;\r\n        background-color: $color5;\r\n        color: $color3;\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      font-size: 1rem;\r\n      color: $color3;\r\n      margin-bottom: -1rem;\r\n    }\r\n  }\r\n}\r\n\r\nfooter {\r\n  width: auto;\r\n  @include breakpoint-down(small) {\r\n    width: 100vw;\r\n  }\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  text-align: left;\r\n  align-items: flex-start;\r\n  max-width: 1080px;\r\n  white-space: nowrap;\r\n  grid-gap: 2px;\r\n  justify-content: center;\r\n  @include breakpoint-up(medium) {\r\n    padding: 0rem;\r\n    margin: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  @include breakpoint-down(small) {\r\n    display: subgrid;\r\n    grid-row-gap: 0px;\r\n    grid-column-gap: 3px;\r\n  }\r\n  a {\r\n    color: black;\r\n    cursor: pointer;\r\n    text-align: right;\r\n    padding-left: 1rem;\r\n    &::before {\r\n      content: '';\r\n      display: block;\r\n      position: absolute;\r\n      height: 0em;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0px;\r\n      color: $color2;\r\n    }\r\n    &:hover {\r\n      &::before {\r\n        background-color: $color3;\r\n      }\r\n    }\r\n  }\r\n  k {\r\n    font-family: 'Helvetica Neue', sans-serif;\r\n    padding: 0;\r\n    color: $color1;\r\n    font-size: 0.7rem;\r\n    text-align: right;\r\n    &:hover {\r\n      color: gainsboro;\r\n    }\r\n  }\r\n  p {\r\n    font-size: $font-med;\r\n    padding: 0.3rem;\r\n  }\r\n  code {\r\n    color: $color1;\r\n    &:hover {\r\n      color: gainsboro;\r\n    }\r\n  }\r\n  .address {\r\n    padding-left: 5px;\r\n    padding-right: 20px;\r\n    text-align: left;\r\n  }\r\n  .contact {\r\n    text-align: center;\r\n  }\r\n  .map {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n}\r\n\r\n.services {\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-template-columns: 0.5fr 4fr 0.5fr;\r\n  max-width: 1080px;\r\n  padding-top: 2rem;\r\n  padding-bottom: 2rem;\r\n  margin-bottom: 3rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: $color3;\r\n  width: 100%;\r\n  .service_buttons {\r\n    &_1 {\r\n      position: relative;\r\n      justify-content: center;\r\n      margin-right: -1rem;\r\n      align-items: center;\r\n      padding-left: 0rem;\r\n      padding-right: 0rem;\r\n      padding-top: 0.2rem;\r\n      color: $color2;\r\n      top: 50%;\r\n      -ms-transform: translateY(-50%);\r\n      transform: translateY(-50%);\r\n      display: block;\r\n      width: 3.5rem;\r\n      height: 3.5rem;\r\n      border-radius: 100%;\r\n      border: 0;\r\n      background-color: #eaf0ed77;\r\n      margin-left: 1.5rem;\r\n      &:hover {\r\n        background-color: rgba(149, 153, 134, 0.219);\r\n      }\r\n    }\r\n    &_2 {\r\n      position: relative;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin-left: 1rem;\r\n      padding-left: 0rem;\r\n      padding-right: 0rem;\r\n      padding-top: 0.2rem;\r\n      top: 50%;\r\n      border: 0;\r\n      background-color: #eaf0ed77;\r\n      -ms-transform: translateY(-50%);\r\n      transform: translateY(-50%);\r\n      display: block;\r\n      width: 3.5rem;\r\n      height: 3.5rem;\r\n      border-radius: 100%;\r\n      margin-left: 0.5rem;\r\n      &:hover {\r\n        background-color: rgba(149, 153, 134, 0.24);\r\n      }\r\n    }\r\n  }\r\n  .service_right {\r\n    @include breakpoint-down(small) {\r\n      display: none;\r\n    }\r\n    position: static;\r\n    margin-left: 1rem;\r\n    padding-left: 0rem;\r\n    width: 0rem;\r\n    height: 15rem;\r\n  }\r\n  .service_left {\r\n    @include breakpoint-down(small) {\r\n      display: none;\r\n    }\r\n    width: 0rem;\r\n    margin-left: -1rem;\r\n    position: static;\r\n    padding-right: 0rem;\r\n    height: 15rem;\r\n  }\r\n  .service_mid {\r\n    margin-left: 0rem;\r\n    padding-left: 0rem;\r\n    margin-right: 0;\r\n    padding-right: 0;\r\n    overflow-x: scroll hidden;\r\n    max-width: 1080px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding-bottom: 10px;\r\n    overflow-y: hidden;\r\n    white-space: nowrap;\r\n    grid-gap: 0px;\r\n    align-items: right;\r\n    transform-origin: right top;\r\n    align-items: center;\r\n    @include breakpoint-up(medium) {\r\n      display: grid;\r\n      padding-left: 1rem;\r\n      grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n      max-width: 900px;\r\n      margin: 0;\r\n      align-items: right;\r\n    }\r\n    @include breakpoint-down(medium) {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n      max-width: 530px;\r\n      margin: auto;\r\n      padding-right: 4rem;\r\n      margin: 0rem;\r\n      align-items: right;\r\n      justify-content: left;\r\n    }\r\n    @include breakpoint-down(small) {\r\n      width: 100vw;\r\n      align-items: center;\r\n      justify-content: left;\r\n    }\r\n    -webkit-overflow-scrolling: touch;\r\n    &::-webkit-scrollbar {\r\n      transform: rotate(-90deg) translateY(-100px);\r\n      transform-origin: right top;\r\n      display: none;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      width: 1px;\r\n      border-radius: 20px;\r\n      background: $color4;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: #b0b0b0;\r\n      background-clip: padding-box;\r\n      border: 0.05em solid #eeeeee;\r\n    }\r\n    -webkit-overflow-scrolling: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n    .service_card {\r\n      text-align: left;\r\n      display: grid;\r\n      justify-content: center;\r\n      display: block;\r\n      background: $color1;\r\n      cursor: pointer;\r\n      margin: 0rem;\r\n      padding: 0;\r\n      margin-right: 1rem;\r\n      height: 13rem;\r\n      min-width: 11rem;\r\n      border-radius: 5px;\r\n      &::before {\r\n        transform: scaleX(0);\r\n        border-radius: 10px;\r\n        transform-origin: bottom right;\r\n        content: ' ';\r\n        display: block;\r\n        color: #ffffff;\r\n        position: absolute;\r\n        border-width: 1;\r\n        border: #ec0000;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background: $color1;\r\n        z-index: -1;\r\n        transition: transform 0.3s ease;\r\n      }\r\n      &:hover::before {\r\n        transform: scaleX(0.1);\r\n      }\r\n      @include breakpoint-down(small) {\r\n        margin-left: 1rem;\r\n      }\r\n      &_top {\r\n        height: 3rem;\r\n        color: rgb(199, 191, 191);\r\n        box-sizing: border-box;\r\n        position: relative;\r\n        padding-left: 0.2rem;\r\n      }\r\n      &_mid {\r\n        height: 4rem;\r\n        color: rgb(0, 0, 0);\r\n        font-size: 0.9rem;\r\n        position: static;\r\n        max-width: 10rem;\r\n        padding-left: 3rem;\r\n      }\r\n      &_bottom {\r\n        height: 5.2rem;\r\n        position: relative;\r\n        background-color: #b0b0b0;\r\n        border-bottom-left-radius: 5px;\r\n        border-bottom-right-radius: 5px;\r\n      }\r\n      p {\r\n        color: rgb(90, 88, 88);\r\n        margin-left: -4rem;\r\n        font-size: 0.7rem;\r\n      }\r\n      h3 {\r\n        position: static;\r\n        padding-left: 0.5rem;\r\n        font-size: 0.8rem;\r\n        color: rgb(0, 0, 0);\r\n      }\r\n      img {\r\n        position: relative;\r\n        right: -30px;\r\n        max-height: 100px;\r\n      }\r\n      &:hover {\r\n        transform: scale(1.05);\r\n        box-shadow: 0 10px 20px rgba(112, 112, 112, 0.12),\r\n          0 4px 8px rgba(107, 107, 107, 0.06);\r\n      }\r\n    }\r\n  }\r\n}\r\n","// Creds to https://github.com/kristoferjoseph/flexboxgrid\r\n// No gutters\r\n// No text alignment with justified container classes (center-xs, for example)\r\n\r\n.row {\r\n  @include row();\r\n}\r\n\r\n.row.reverse {\r\n  @include row-reverse();\r\n}\r\n\r\n.row.natural-height {\r\n  @include row-natural-height();\r\n}\r\n\r\n.row.flex-column {\r\n  @include row-flex-column();\r\n}\r\n\r\n.col {\r\n  @include col();\r\n}\r\n\r\n.col.reverse {\r\n  @include col-reverse();\r\n}\r\n\r\n.first {\r\n  order: -1;\r\n}\r\n\r\n.last {\r\n  order: 1;\r\n}\r\n\r\n.align-start {\r\n  align-self: flex-start;\r\n}\r\n\r\n.align-end {\r\n  align-self: flex-end;\r\n}\r\n\r\n.align-center {\r\n  align-self: center;\r\n}\r\n\r\n.align-baseline {\r\n  align-self: baseline;\r\n}\r\n\r\n.align-stretch {\r\n  align-self: stretch;\r\n}\r\n\r\n// Mixin to run inside of for loop - creates col/breakpoint classes * Not for developer use *\r\n@mixin col-factory($thisPrefix) {\r\n  .col-#{$thisPrefix} {\r\n    box-sizing: border-box;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    max-width: 100%;\r\n    padding: $gutter;\r\n  }\r\n  @for $i from 1 through $grid-columns {\r\n    .col-#{$thisPrefix}-#{$i} {\r\n      box-sizing: border-box;\r\n      flex-basis: 100% / $grid-columns * $i;\r\n      max-width: 100% / $grid-columns * $i;\r\n      padding: $gutter;\r\n    }\r\n    .col-#{$thisPrefix}-offset-#{$i} {\r\n      margin-left: 100% / $grid-columns * $i;\r\n    }\r\n  }\r\n  .row.start-#{$thisPrefix} {\r\n    justify-content: flex-start;\r\n  }\r\n  .row.center-#{$thisPrefix} {\r\n    justify-content: center;\r\n  }\r\n  .row.end-#{$thisPrefix} {\r\n    justify-content: flex-end;\r\n  }\r\n  .row.top-#{$thisPrefix} {\r\n    align-items: flex-start;\r\n  }\r\n  .row.middle-#{$thisPrefix} {\r\n    align-items: center;\r\n  }\r\n  .row.bottom-#{$thisPrefix} {\r\n    align-items: flex-end;\r\n  }\r\n  .row.around-#{$thisPrefix} {\r\n    justify-content: space-around;\r\n  }\r\n  .row.between-#{$thisPrefix} {\r\n    justify-content: space-between;\r\n  }\r\n  .first-#{$thisPrefix} {\r\n    order: -1;\r\n  }\r\n  .last-#{$thisPrefix} {\r\n    order: 1;\r\n  }\r\n} // Mixin to run inside of for loop - creates col/breakpoint classes\r\n\r\n@for $i from 1 through length($breakpoint-up-prefixes) {\r\n  $thisPrefix: nth($breakpoint-up-prefixes, $i);\r\n  @if $thisPrefix == 'xs' {\r\n    @include col-factory($thisPrefix);\r\n  } @else if $thisPrefix == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      @include col-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      @include col-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      @include col-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      @include col-factory($thisPrefix);\r\n    }\r\n  }\r\n}\r\n\r\n.col-gutter-lr {\r\n  padding: 0 $gutter;\r\n}\r\n\r\n.col-no-gutter {\r\n  padding: 0;\r\n}\r\n","@mixin row($full-width: 'false') {\r\n  box-sizing: border-box;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex: 0 1 auto;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  // // Overrides flexbox's default behavior of making all children equal height\r\n  // align-items: flex-start; // If this was not in place it would require two classes to make a row full of unequal height columns aligned top, middle, bottom\r\n  @if type-of($content-well-max-width) ==\r\n    number and\r\n    $content-well-max-width !=\r\n    0 and\r\n    $full-width ==\r\n    'false'\r\n  {\r\n    max-width: $content-well-max-width;\r\n  }\r\n}\r\n\r\n@mixin row-reverse() {\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n@mixin row-natural-height() {\r\n  align-items: flex-start;\r\n}\r\n\r\n@mixin row-flex-column() {\r\n  flex-direction: column;\r\n}\r\n\r\n@mixin col-reverse() {\r\n  flex-direction: column-reverse;\r\n}\r\n\r\n// Condition to run inside of the col mixin * not for developer use *\r\n@mixin col-condition($col-number) {\r\n  @if type-of($col-number) == number {\r\n    @if $col-number > $grid-columns or $col-number == 0 {\r\n      @warn \"Column number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n    } @else {\r\n      box-sizing: border-box;\r\n      flex-basis: 100% / $grid-columns * $col-number;\r\n      max-width: 100% / $grid-columns * $col-number;\r\n      padding: $gutter;\r\n    }\r\n    // If no col number is passed then arg is set to \"auto\" by default\r\n    // \"auto\" mode fills the horizontal space with evenly sized containers\r\n  } @else if $col-number == 'auto' {\r\n    box-sizing: border-box;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    max-width: 100%;\r\n    padding: $gutter;\r\n  } @else {\r\n    @warn \"Column number argument must either be the string 'auto' or a number greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n  }\r\n} // Condition to run inside of the col mixin * not for developer use *\r\n\r\n@mixin col($breakpoint: 'xs', $col-number: 'auto') {\r\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\r\n  @if type-of($breakpoint) == number {\r\n    $col-number: $breakpoint;\r\n    @include col-condition($col-number);\r\n  } @else if $breakpoint == 'xs' {\r\n    @include col-condition($col-number);\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      @include col-condition($col-number);\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      @include col-condition($col-number);\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      @include col-condition($col-number);\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      @include col-condition($col-number);\r\n    }\r\n  } @else {\r\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n// Condition to run inside of the col-offset mixin * not for developer use *\r\n@mixin col-offset-condition($offset-number) {\r\n  @if type-of($offset-number) != number {\r\n    @warn \"Column offset number must be a number (only arg or second arg in the col mixin)\";\r\n  } @else if $offset-number == 0 {\r\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n  } @else if $offset-number > $grid-columns {\r\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n  } @else {\r\n    margin-left: 100% / $grid-columns * $offset-number;\r\n  }\r\n} // Condition to run inside of the col-offset mixin * not for developer use *\r\n\r\n@mixin col-offset($breakpoint: 'xs', $offset-number: 0) {\r\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\r\n  @if type-of($breakpoint) == number {\r\n    $offset-number: $breakpoint;\r\n    @include col-offset-condition($offset-number);\r\n  } @else if $breakpoint == 'xs' {\r\n    @include col-offset-condition($offset-number);\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      @include col-offset-condition($offset-number);\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      @include col-offset-condition($offset-number);\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      @include col-offset-condition($offset-number);\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      @include col-offset-condition($offset-number);\r\n    }\r\n  } @else {\r\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin start($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    justify-content: flex-start;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      justify-content: flex-start;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      justify-content: flex-start;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      justify-content: flex-start;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      justify-content: flex-start;\r\n    }\r\n  } @else {\r\n    @warn \"start mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin center($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    justify-content: center;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      justify-content: center;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      justify-content: center;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      justify-content: center;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      justify-content: center;\r\n    }\r\n  } @else {\r\n    @warn \"center mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin end($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    justify-content: flex-end;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      justify-content: flex-end;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      justify-content: flex-end;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      justify-content: flex-end;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      justify-content: flex-end;\r\n    }\r\n  } @else {\r\n    @warn \"end mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin top($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    align-items: flex-start;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      align-items: flex-start;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      align-items: flex-start;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      align-items: flex-start;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      align-items: flex-start;\r\n    }\r\n  } @else {\r\n    @warn \"top mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin middle($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    align-items: center;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      align-items: center;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      align-items: center;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      align-items: center;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      align-items: center;\r\n    }\r\n  } @else {\r\n    @warn \"middle mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin bottom($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    align-items: flex-end;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      align-items: flex-end;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      align-items: flex-end;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      align-items: flex-end;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      align-items: flex-end;\r\n    }\r\n  } @else {\r\n    @warn \"bottom mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin around($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    justify-content: space-around;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      justify-content: space-around;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      justify-content: space-around;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      justify-content: space-around;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      justify-content: space-around;\r\n    }\r\n  } @else {\r\n    @warn \"around mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin between($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    justify-content: space-between;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      justify-content: space-between;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      justify-content: space-between;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      justify-content: space-between;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      justify-content: space-between;\r\n    }\r\n  } @else {\r\n    @warn \"between mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin first($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    order: -1;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      order: -1;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      order: -1;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      order: -1;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      order: -1;\r\n    }\r\n  } @else {\r\n    @warn \"first mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n\r\n@mixin last($breakpoint: 'xs') {\r\n  @if $breakpoint == 'xs' {\r\n    order: 1;\r\n  } @else if $breakpoint == 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      order: 1;\r\n    }\r\n  } @else if $breakpoint == 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      order: 1;\r\n    }\r\n  } @else if $breakpoint == 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      order: 1;\r\n    }\r\n  } @else if $breakpoint == 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      order: 1;\r\n    }\r\n  } @else {\r\n    @warn \"last mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n  }\r\n}\r\n","// Grid\r\n$grid-columns: 12 !default; // Set number of columns in the grid\r\n\r\n$xs-max: 40rem !default; // Set xs breakpoint's max width\r\n$sm-max: 64rem !default; // Set sm breakpoint's max width\r\n$md-max: 90rem !default; // Set md breakpoint's max width\r\n$lg-max: 120rem !default; // Set lg breakpoint's max width\r\n\r\n$gutter: 1rem !default; // Set gutter size\r\n\r\n$content-well-max-width: 'none' !default; // Set the max-width of the content well\r\n\r\n$sm-start: ($xs-max + 1); // Generate sm breakpoint's min width\r\n$md-start: ($sm-max + 1); // Generate md breakpoint's min width\r\n$lg-start: ($md-max + 1); // Generate lg breakpoint's min width\r\n$xl-start: ($lg-max + 1); // Generate xl breakpoint's min width\r\n\r\n// Breakpoints\r\n// Create breakpoint range statements to be used in media queries\r\n$breakpoint-xs-only: 'only screen and (max-width: #{$xs-max})'; // 0 -> xs-max range\r\n$breakpoint-sm-up: 'only screen and (min-width: #{$sm-start})'; // sm-start -> up range\r\n$breakpoint-sm-only: 'only screen and (min-width: #{$sm-start}) and (max-width: #{$sm-max})'; // sm-start -> sm-max range\r\n$breakpoint-md-up: 'only screen and (min-width: #{$md-start})'; // md-start -> up range\r\n$breakpoint-md-only: 'only screen and (min-width: #{$md-start}) and (max-width: #{$md-max})'; // md-start -> md-max range\r\n$breakpoint-lg-up: 'only screen and (min-width: #{$lg-start})'; // lg-start -> up range\r\n$breakpoint-lg-only: 'only screen and (min-width: #{$lg-start}) and (max-width: #{$lg-max})'; // lg-start -> lg-max range\r\n$breakpoint-xl-up: 'only screen and (min-width: #{$xl-start})'; // xl-start -> up range\r\n\r\n$breakpoints-all: (\r\n  $breakpoint-xs-only,\r\n  $breakpoint-sm-up,\r\n  $breakpoint-sm-only,\r\n  $breakpoint-md-up,\r\n  $breakpoint-md-only,\r\n  $breakpoint-lg-up,\r\n  $breakpoint-lg-only,\r\n  $breakpoint-xl-up\r\n);\r\n$breakpoint-ups: (\r\n  $breakpoint-sm-up,\r\n  $breakpoint-md-up,\r\n  $breakpoint-lg-up,\r\n  $breakpoint-xl-up\r\n);\r\n$breakpoint-all-prefixes: (\r\n  'xs',\r\n  'xs-only',\r\n  'sm',\r\n  'sm-only',\r\n  'md',\r\n  'md-only',\r\n  'lg',\r\n  'lg-only',\r\n  'xl'\r\n);\r\n$breakpoint-up-prefixes: ('xs', 'sm', 'md', 'lg', 'xl');\r\n",".show {\r\n  display: block !important;\r\n}\r\n\r\n.row.show {\r\n  display: -webkit-flex !important;\r\n  display: -ms-flexbox !important;\r\n  display: flex !important;\r\n}\r\n\r\n.hide {\r\n  display: none !important;\r\n}\r\n\r\n// Mixin to run inside of for loop - creates visibility classes * Not for developer use *\r\n@mixin vis-factory($thisPrefix) {\r\n  .show-#{$thisPrefix} {\r\n    display: block !important;\r\n  }\r\n  .row.show-#{$thisPrefix} {\r\n    display: -webkit-flex !important;\r\n    display: -ms-flexbox !important;\r\n    display: flex !important;\r\n  }\r\n  .hide-#{$thisPrefix} {\r\n    display: none !important;\r\n  }\r\n} // Mixin to run inside of for loop - creates visibility classes * Not for developer use *\r\n@for $i from 1 through length($breakpoint-all-prefixes) {\r\n  $thisPrefix: nth($breakpoint-all-prefixes, $i);\r\n  @if $thisPrefix== 'xs' {\r\n    @include vis-factory($thisPrefix);\r\n  } @else if $thisPrefix== 'xs-only' {\r\n    @media #{$breakpoint-xs-only} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix== 'sm' {\r\n    @media #{$breakpoint-sm-up} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix== 'sm-only' {\r\n    @media #{$breakpoint-sm-only} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix== 'md' {\r\n    @media #{$breakpoint-md-up} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix== 'md-only' {\r\n    @media #{$breakpoint-md-only} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix== 'lg' {\r\n    @media #{$breakpoint-lg-up} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix== 'lg-only' {\r\n    @media #{$breakpoint-lg-only} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  } @else if $thisPrefix== 'xl' {\r\n    @media #{$breakpoint-xl-up} {\r\n      @include vis-factory($thisPrefix);\r\n    }\r\n  }\r\n}\r\n",".menu {\r\n  position: fixed;\r\n  margin: 0.1rem;\r\n  bottom: -1rem;\r\n  box-sizing: border-box;\r\n  font-size: 20px;\r\n  left: 95%;\r\n  top: 80%;\r\n}\r\n\r\n.whatsapp {\r\n  background: #0b8dc900;\r\n  justify-content: left;\r\n  align-items: center;\r\n  text-align: right;\r\n  border-radius: 100%;\r\n  width: 3em;\r\n  height: 3em;\r\n  margin-left: -3.5em;\r\n  bottom: 2.5em;\r\n  position: absolute;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  line-height: 100px;\r\n  -webkit-transform: translate3d(0, 0, 0);\r\n  transform: translate3d(0, 0, 0);\r\n  -webkit-transition: -webkit-transform ease-out 200ms;\r\n  transition: -webkit-transform ease-out 200ms;\r\n  transition: transform ease-out 200ms;\r\n  transition: transform ease-out 200ms, -webkit-transform ease-out 200ms;\r\n  img {\r\n    width: 4.5rem;\r\n  }\r\n  &_content {\r\n    display: block;\r\n  }\r\n  &__wa {\r\n    position: fixed;\r\n    justify-content: center;\r\n    align-content: center;\r\n    flex-direction: column;\r\n    width: auto;\r\n    height: auto;\r\n    transition: 0.11s;\r\n    margin: 0rem;\r\n    padding: 0rem;\r\n    margin-left: 0rem;\r\n    margin-right: 0rem;\r\n    height: 18rem;\r\n    right: 3rem;\r\n    bottom: 7rem;\r\n    @include breakpoint-down(medium) {\r\n      margin: 1rem;\r\n      padding: 0rem;\r\n      margin-left: 0rem;\r\n      margin-right: 0rem;\r\n      height: 18rem;\r\n      right: 3rem;\r\n      bottom: 6rem;\r\n    }\r\n    @include breakpoint-down(small) {\r\n      margin: 1rem;\r\n      padding: 0rem;\r\n      margin-left: 0rem;\r\n      margin-right: 0rem;\r\n      height: 18rem;\r\n      right: 1rem;\r\n      bottom: 5.5rem;\r\n    }\r\n    .textbox {\r\n      filter: drop-shadow(10px 5px 10px rgba(0, 0, 0, 0.7));\r\n      padding: 1rem;\r\n      display: fixed;\r\n      border-radius: 2px;\r\n      box-sizing: border-box;\r\n      position: relative;\r\n      background-color: $color3;\r\n      justify-content: center;\r\n      flex: auto;\r\n      color: $color5;\r\n      padding-top: 0.5rem;\r\n      padding-left: 0.7rem;\r\n      width: 90%;\r\n      height: 90%;\r\n      margin-top: 2rem;\r\n      margin-left: 2rem;\r\n      padding-left: 1rem;\r\n      width: 20rem;\r\n      height: 16rem;\r\n      font-size: 0.8em;\r\n      @keyframes short-press {\r\n        0% {\r\n          transform: scale(1);\r\n        }\r\n        50% {\r\n          transform: scale(0.9);\r\n        }\r\n        100% {\r\n          transform: scale(1);\r\n        }\r\n      }\r\n      button {\r\n        position: absolute;\r\n        bottom: 1px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-content: center;\r\n        margin-left: 15.8rem;\r\n        margin-top: -3.54rem;\r\n        z-index: 8;\r\n        transition: 0.3s;\r\n        border: none;\r\n        outline: none;\r\n        margin-bottom: 0.8rem;\r\n        cursor: pointer;\r\n        animation: 0.6s 0s both;\r\n        background-color: rgba(72, 212, 29, 0);\r\n        /* offset-x > | offset-y ^| blur-radius | spread-radius | color */\r\n        svg {\r\n          color: #9c9898;\r\n          width: 2.8rem;\r\n          height: 3rem;\r\n          padding: 0.5rem;\r\n        }\r\n      }\r\n      .textarea {\r\n        display: block;\r\n        resize: vertical;\r\n        overflow: hidden;\r\n        white-space: pre-wrap;\r\n        word-wrap: break-word;\r\n        position: absolute;\r\n        bottom: 1px;\r\n        outline: none;\r\n        color: $color6;\r\n        border: 0;\r\n        padding: 0.6em;\r\n        box-shadow: 2px 2px 6px #888888;\r\n        margin-bottom: 1rem;\r\n        width: 80%;\r\n        font-size: 1rem;\r\n        height: 100% 3rem;\r\n        max-height: 7rem;\r\n        padding-left: 1rem;\r\n        border-radius: 1.5rem;\r\n        background-color: rgb(177, 165, 165);\r\n      }\r\n    }\r\n    .qr {\r\n      width: 10rem;\r\n      @include breakpoint-up(medium) {\r\n        width: 250px;\r\n        height: 100%;\r\n      }\r\n    }\r\n    .dim {\r\n      color: $color5;\r\n      margin-right: auto;\r\n      padding-top: 0.1rem;\r\n      @include breakpoint-down(small) {\r\n        padding-left: 1rem;\r\n      }\r\n      font-size: 1.8rem;\r\n      button {\r\n        width: 4rem;\r\n        height: 1.5rem;\r\n        background-color: $color5;\r\n        color: $color3;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}